/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.7).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package virtu.systems.demo.api;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import virtu.systems.demo.api.dto.InsuranceHolderDto;
import virtu.systems.demo.api.dto.InsuranceHolderRequestDto;
import virtu.systems.demo.api.dto.InsuranceHoldersResponseDto;

import javax.validation.Valid;
import java.util.Optional;

@Api(value = "InsuranceHolder", description = "the InsuranceHolder API")
public interface InsuranceHolderApi {

    @ApiOperation(value = "Delete InsuranceHolder", nickname = "deleteInsuranceHolderById", notes = "", response = InsuranceHolderDto.class, tags={ "InsuranceHolder", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InsuranceHolderDto.class) })
    @RequestMapping(value = "/insuranceHolder/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<InsuranceHolderDto> deleteInsuranceHolderById(@ApiParam(value = "Id of insuranceHolder",required=true) @PathVariable("id") Long id);


    @ApiOperation(value = "InsuranceHolder", nickname = "getInsuranceHolderById", notes = "", response = InsuranceHolderDto.class, tags={ "InsuranceHolder", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InsuranceHolderDto.class) })
    @RequestMapping(value = "/insuranceHolder/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InsuranceHolderDto> getInsuranceHolderById(@ApiParam(value = "Id of insuranceHolder",required=true) @PathVariable("id") Long id);


    @ApiOperation(value = "InsuranceHolder list", nickname = "getInsuranceHolders", notes = "Список страхователей", response = InsuranceHoldersResponseDto.class, tags={ "InsuranceHolder", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InsuranceHoldersResponseDto.class) })
    @RequestMapping(value = "/insuranceHolders",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InsuranceHoldersResponseDto> getInsuranceHolders(@ApiParam(value = "") @Valid @RequestParam(value = "lastName", required = false) Optional<String> lastName,@ApiParam(value = "") @Valid @RequestParam(value = "firstName", required = false) Optional<String> firstName,@ApiParam(value = "") @Valid @RequestParam(value = "middleName", required = false) Optional<String> middleName,@ApiParam(value = "") @Valid @RequestParam(value = "passportSeries", required = false) Optional<String> passportSeries,@ApiParam(value = "") @Valid @RequestParam(value = "passportId", required = false) Optional<String> passportId);


    @ApiOperation(value = "Add new Insurance Holder", nickname = "postInsuranceHolder", notes = "Добавление нового страхователя", response = InsuranceHolderDto.class, tags={ "InsuranceHolder", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InsuranceHolderDto.class) })
    @RequestMapping(value = "/insuranceHolder",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<InsuranceHolderDto> postInsuranceHolder(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InsuranceHolderRequestDto insuranceHolder);


    @ApiOperation(value = "Update Insurance Holder", nickname = "putInsuranceHolder", notes = "Изменение данных страхователя", response = InsuranceHolderDto.class, tags={ "InsuranceHolder", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InsuranceHolderDto.class) })
    @RequestMapping(value = "/insuranceHolder/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<InsuranceHolderDto> putInsuranceHolder(@ApiParam(value = "Id of insuranceHolder",required=true) @PathVariable("id") Long id,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InsuranceHolderRequestDto insuranceHolder);

}
